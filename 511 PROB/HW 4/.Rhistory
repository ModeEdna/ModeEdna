mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoreticla probability is: ', prob.theory))
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:iterations){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# getting mean and sd
exp.boot.mean <- mean(exp.boot)
exp.boot.sd <- sd(exp.boot)
# print the individual values
print(paste0('The bootstrap mean is: ', exp.boot.mean))
print(paste0('The bootstrap SD is: ', exp.boot.sd))
# print the original individual values
print(paste0('The original mean is: ', mean(exp.1)))
print(paste0('The original SD is: ', sd(exp.1)))
# comparing them with the original data
print(paste0('The bootstrapped mean minus the original mean is: ', exp.boot.mean - X.hat))
print(paste0('The standard error minus the original standard deviation is: ', exp.boot.sd-sd(exp.1)))
# get the 30 numbers and their mean
set.seed(1)
exp.1 <- rexp(30,1/3)
X.hat <- mean(exp.1)
# get length of sample and bootstrap it
n.exp <- length(exp.1)
exp.boot <- replicate(10000,mean(sample(exp.1, n.exp, replace=TRUE)))
# plot the distribution
hist(exp.boot, prob=T)
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:iterations){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
pexp(3.5, 1/3)
pexp(3.5, 1/3)
(length(exp.boot[exp.boot<=3.5])/length(exp.boot))
# get the 30 numbers and their mean
set.seed(1)
exp.1 <- rexp(30,1/3)
X.hat <- mean(exp.1)
# get length of sample and bootstrap it
n.exp <- length(exp.1)
exp.boot <- replicate(100000,mean(sample(exp.1, n.exp, replace=TRUE)))
# plot the distribution
hist(exp.boot, prob=T)
exp.boot[exp.boot<=3.5]
length(exp.boot[exp.boot<=3.5])/length(exp.boot)
length(exp.boot[exp.boot<=3.5])/length(exp.boot)
![]('./4a.png')
sum(X)
min = 0
a = 10
n = 1000
X <- replicate(10000,sum(runif(n,min,a)))
hist(X)
mean(X)
min = 0
a = 10
n = 10
X <- replicate(10000,sum(runif(n,min,a)))
hist(X)
mean(X)
# set seed
set.seed(1)
# create simulations
sims <- rmultinom(10000,20,prob=c(.45,.45,.1))
# create the dataframe that we'll need to find the probabilities
df = data.frame(sims)
dft = t(df)
colnames(dft) <- c('D','R','I')
dft2 <- as.data.frame(dft)
# search for the events where event happened
sample.prob <- length(dft2[dft2$D==9 & dft2$R==9 & dft2$I==2,]$R)/10000
theory.prob <- dmultinom(c(9,9,2),20,c(.45,.45,.1))
# printing the
print(paste0('The sample probability is: ', sample.prob))
print(paste0('The theoretical probability is: ', theory.prob))
set.seed(42)
dft <- t(as.data.frame(replicate(10000, table({b <- c(0, 1, 2); factor(sample(b, size=10, replace=TRUE, prob=c(.3, .4, .3)), levels=b)}))))
colnames(dft) <- c("X.1", "X.2", "X.3")
dft <- as.data.frame(dft)
sample.prob <- length(dft[dft$X.1==3 & dft$X.2==4 & dft$X.3==3,]$X.1)/length(dft$X.1)
theory.prob <- dmultinom(c(3,4,3),10,c(.3,.4,.3))
print(paste0('The sample probability is: ', sample.prob))
print(paste0('The theoretical probability is: ', theory.prob))
# create the samples for runif and put them in a df
r = 10000
c = 12
m <- matrix(ncol=c, nrow=r)
for(i in 1:iterations){
m[i,] <- runif(12)
}
df <- data.frame(m)
# create the Z values for each sample
df$Z <- rowSums(df)-6
# plot the Z values to prove normalcy
hist(df$Z)
# normalcy test
ks.test(df$Z, "pnorm")
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:iterations){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# get the 30 numbers and their mean
set.seed(1)
exp.1 <- rexp(30,1/3)
X.hat <- mean(exp.1)
# get length of sample and bootstrap it
n.exp <- length(exp.1)
exp.boot <- replicate(10000,mean(sample(exp.1, n.exp, replace=TRUE)))
# plot the distribution
hist(exp.boot, prob=T)
# getting mean and sd
exp.boot.mean <- mean(exp.boot)
exp.boot.sd <- sd(exp.boot)
# print the individual values
print(paste0('The bootstrap mean is: ', exp.boot.mean))
print(paste0('The bootstrap SD is: ', exp.boot.sd))
# print the original individual values
print(paste0('The original mean is: ', mean(exp.1)))
print(paste0('The original SD is: ', sd(exp.1)))
# comparing them with the original data
print(paste0('The bootstrapped mean minus the original mean is: ', exp.boot.mean - X.hat))
print(paste0('The standard error minus the original standard deviation is: ', exp.boot.sd-sd(exp.1)))
length(exp.boot[exp.boot<=3.5])/length(exp.boot)
(length(exp.boot[exp.boot<=3.5])/length(exp.boot))
mnea(sample(exp.boot,100))
mean(sample(exp.boot,100))
mean(sample(exp.boot,100)<=3.5)
mean(sample(exp.boot,1000)<=3.5)
# create the samples for runif and put them in a df
r = 10000
c = 12
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
m[i,] <- runif(12)
}
df <- data.frame(m)
# create the Z values for each sample
df$Z <- rowSums(df)-6
# plot the Z values to prove normalcy
hist(df$Z)
# normalcy test
ks.test(df$Z, "pnorm")
# get the 30 numbers and their mean
x <- replicate(10000, mean(rexp(30,1/3)))
# plot the distribution
hist(x)
# getting mean and sd
mean(x)
sd(x)
length(x[x<=3.5])/length(x)
mean(sample(x,1000)<=3.5)
mean(sample(x,30)<=3.5)
mean(sample(x,100)<=3.5)
mean(sample(x,1000)<=3.5)
pexp(3.5, rate=1/3)
pnorm(3.5, mean=mean(x),sd=sd(x))
# set seed
set.seed(1)
# create simulations
sims <- rmultinom(10000,20,prob=c(.45,.45,.1))
# create the dataframe that we'll need to find the probabilities
df = data.frame(sims)
dft = t(df)
colnames(dft) <- c('D','R','I')
dft2 <- as.data.frame(dft)
# search for the events where event happened
sample.prob <- length(dft2[dft2$D==9 & dft2$R==9 & dft2$I==2,]$R)/10000
theory.prob <- dmultinom(c(9,9,2),20,c(.45,.45,.1))
# printing the
print(paste0('The sample probability is: ', sample.prob))
print(paste0('The theoretical probability is: ', theory.prob))
set.seed(42)
dft <- t(as.data.frame(replicate(10000, table({b <- c(0, 1, 2); factor(sample(b, size=10, replace=TRUE, prob=c(.3, .4, .3)), levels=b)}))))
colnames(dft) <- c("X.1", "X.2", "X.3")
dft <- as.data.frame(dft)
sample.prob <- length(dft[dft$X.1==3 & dft$X.2==4 & dft$X.3==3,]$X.1)/length(dft$X.1)
theory.prob <- dmultinom(c(3,4,3),10,c(.3,.4,.3))
print(paste0('The sample probability is: ', sample.prob))
print(paste0('The theoretical probability is: ', theory.prob))
# create the samples for runif and put them in a df
r = 10000
c = 12
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
m[i,] <- runif(12)
}
df <- data.frame(m)
# create the Z values for each sample
df$Z <- rowSums(df)-6
# plot the Z values to prove normalcy
hist(df$Z)
# normalcy test
ks.test(df$Z, "pnorm")
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
![](4a.png){width="250"}
![]('./'){width="250"}
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# get the 30 numbers and their mean
x <- replicate(10000, mean(rexp(30,1/3)))
# plot the distribution
hist(x)
# getting mean and sd
mean(x)
sd(x)
length(x[x<=3.5])/length(x)
pnorm(3.5, mean=mean(x),sd=sd(x))
# getting mean and sd
mean(x)
sd(x)
# theoretical values
theory.mean <- (1/(1/3))
# getting mean and sd
mean(x)
sd(x)
# theoretical values
theory.mean <- (1/(1/3))
theory.sd <- theory.mean/sqrt(30)
# getting mean and sd
print(paste0('Sample mean: ', mean(x)))
print(paste0('Sample sd: ', sd(x)))
# theoretical values
print(paste0('Theoretical mean: ', (1/(1/3))))
print(paste0('Theoretical sd: ', theory.mean/sqrt(30)))
y <- replicate(10000, sum(runif(30,0,2)))
mean(y)
y <- replicate(10000, sum(runif(30,0,4)))
mean(y)
var(y)
sd(y)
var(y)
(3.5-3)/.545
pnorm(3.5, mean=mean(x),sd=sd(x))
(3.5-3)/.545
pnorm(3.5, mean=mean(x),sd=sd(x))
(3.5-mean(x))/sd(x)
sd(runif(1000,0,4))
sd(runif(10000,0,4))
sd(runif(100000,0,4))
sd(runif(10000,0,4))
y <- replicate(10000, sum(runif(30,0,4)))
var(y)
mean(y)
var(y)
mean(runif(100,0,4))
# getting mean and sd
print(paste0('Sample mean: ', mean(x)))
print(paste0('Sample sd: ', sd(x)))
# theoretical values
print(paste0('Theoretical mean: ', (1/(1/3))))
print(paste0('Theoretical sd: ', 3/sqrt(30)))
var(y)
y <- replicate(10000, sum(runif(30,0,4)))
var(y)
y <- replicate(10000, mean(runif(30,0,4)))
var(y)
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
#hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
mean.theory = -3
var.theory = 37/12
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
mean.theory = -3
var.theory = 37/12
print(paste0('The theoretical mean is: '), mean.theory)
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
mean.theory = -3
var.theory = 37/12
print(paste0('The theoretical mean is: ', mean.theory))
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The thoeretical sd is: '), sqrt(var.theory))
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
sqrt(var.theory)
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
mean.theory = -3
var.theory = 37/12
sd.theory <- sqrt(var.theory)
print(paste0('The theoretical mean is: ', mean.theory))
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The theoretical sd is: '), sd.theory)
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# create the samples for the sum and put them in a dataframe
r = 10000
c = 1
m <- matrix(ncol=c, nrow=r)
for(i in 1:r){
Z <- mean(rnorm(9,7,3))- mean(rnorm(12,10,5))
m[i,] <- Z
}
df <- data.frame(m)
#plotting the histogram
hist(df$m)
# mean of the values
mean.theory = -3
var.theory = 37/12
sd.theory <- sqrt(var.theory)
print(paste0('The theoretical mean is: ', mean.theory))
print(paste0('The mean of the values is: ', mean(df$m)))
# sd of the values
print(paste0('The theoretical sd is: ', sd.theory))
print(paste0('The sd of the values is: ', sd(df$m)))
# finding the probability of W being less than or equal to -1.5 with my samples
print(paste0('The sample probability is: ',length(df[df$m <= -1.5,])/length(df$m)))
# finding the theoretical exact answer
prob.theory = pnorm(-1.5,mean = mean.theory, sd = sqrt(var.theory))
print(paste0('The theoretical probability is: ', prob.theory))
# get the 30 numbers and their mean
x <- replicate(10000, mean(rexp(30,1/3)))
# plot the distribution
hist(x)
# getting mean and sd
print(paste0('Sample mean: ', mean(x)))
print(paste0('Sample sd: ', sd(x)))
# theoretical values
print(paste0('Theoretical mean: ', (1/(1/3))))
print(paste0('Theoretical sd: ', 3/sqrt(30)))
length(x[x<=3.5])/length(x)
pnorm(3.5, mean=mean(x),sd=sd(x))
pnorm(3.5, mean=mean(x),sd=sd(x))
# get the 30 numbers and their mean
x <- replicate(10000, mean(rexp(30,1/3)))
# plot the distribution
hist(x)
# getting mean and sd
print(paste0('Sample mean: ', mean(x)))
print(paste0('Sample sd: ', sd(x)))
# theoretical values
print(paste0('Theoretical mean: ', (1/(1/3))))
print(paste0('Theoretical sd: ', 3/sqrt(30)))
length(x[x<=3.5])/length(x)
pnorm(3.5, mean=mean(x),sd=sd(x))
