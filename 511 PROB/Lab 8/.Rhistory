pbinom(290,800,.34)
pbinom(290,800,.34)-pbinom(250,800,.34)
pbinom(250,800,.34)
pbinom(290,800,.34)
pbinom(290,800,.34)-pbinom(250,800,.34)
sqrt(.34(1-.34))
sqrt(.34*(1-.34))
sqrt((.34*(1.-34))/800)
sqrt((.34*(1.-.34))/800)
pnorm(q,mean=.34*800,sd=sqrt(.34*800(1-.34)))
pnorm(290,mean=.34*800,sd=sqrt(.34*800(1-.34)))
pnorm(q=290,mean=.34*800,sd=sqrt(.34*800(1-.34)))
pnorm(q=290,mean=.34*800,sd=sqrt(.34*800*(1-.34)))
pnorm(q=290,mean=.34*800,sd=sqrt(.34*800*(1-.34)))-pnorm(q=250,mean=.34*800,sd=sqrt(.34*800*(1-.34)))
set.seed(321)
mylikeli.exp = function(lambda,x){exp(-length(x)*lambda)*lambda^sum(x)/prod(factorial(x))}
X.2 <- rexp(5)
t = seq(.01,8,by = .01) #range of lambda
y.1 <- sapply(t,function(t){mylikeli.poisson(t,x0)})
t = seq(.01,8,by = .01) #range of lambda
y.1 <- sapply(t,function(t){mylikeli.exp(t,x0)})
t = seq(.01,8,by = .01) #range of lambda
y.1 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,y.1, xlab = 'lambda', ylab = 'likelihood',
type = 'l', lwd = 2)
grid(col = 4)
t[which.max(y.1)]
mylikeli.exp = (lambda^length(x))*(exp(-lambda*sum(x)))
exp(1)
mylikeli.exp = function(lambda,x){
(lambda^length(x))*(exp(1)^(-lambda*(sum(x))))}
X.2 <- rexp(5)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
likeli.0 <- matrix(NA, nrow = dim(X.2)[2], ncol = length(t))
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)){
x0 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,x0)})
}
plot(t,likeli.0[1,], xlab = 'lambda', ylab = 'likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(0,max(likeli.0)))
for (j in 2:10){
lines(t,likeli.0[j,], lwd = 2, col = j)
}
grid(col = 3)
X.0 <- matrix(rexp(40,4), nrow = 4)
likeli.0 <- matrix(NA, nrow = dim(X.0)[2], ncol = length(t))
for (j in 1:ncol(X.0)){
x0 <- X.0[,j]
likeli.0[j,] <- sapply(t,function(t){mylikeli.exp(t,x0)})
}
plot(t,log(likeli.0[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1)
for (j in 2:10){
lines(t,log(likeli.0[j,]), lwd = 2, col = j)
}
t = seq(.01,8,by = .01) #range of lambda
y.1 <- sapply(t,function(t){mylikeli.exp(t,X.2)})
plot(t,y.1, xlab = 'lambda', ylab = 'likelihood',
type = 'l', lwd = 2)
grid(col = 4)
t[which.max(y.1)]
t = seq(.01,8,by = .01) #range of lambda
y.1 <- sapply(t,function(t){log(mylikeli.exp(t,X.2))})
plot(t,y.1, xlab = 'lambda', ylab = 'log likelihood',
type = 'l', lwd = 2)
grid(col = 4)
t[which.max(y.1)]
mysize = c(5,10,20,40, 80)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j], lambda = 4)
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
mysize = c(5,10,20,40, 80)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j])
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
plot(t,log(likeli.1[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(-300,0))
for (j in 2:length(mysize)){
lines(t,log(likeli.1[j,]), lwd = 2, col = j)
}
mysize = c(5, 10, 20, 40, 80, 30, 50, 60, 70, 90)
likeli.1 <- matrix(NA, nrow = length(mysize), ncol = length(t))
for (j in 1:length(mysize)){
mysample <- rexp(mysize[j])
likeli.1[j,]  <- sapply(t,function(t){mylikeli.exp(t,mysample)})
}
plot(t,log(likeli.1[1,]), xlab = 'lambda', ylab = 'log-likelihood',
type = 'l', lwd = 2, col = 1, ylim = c(-300,0))
for (j in 2:length(mysize)){
lines(t,log(likeli.1[j,]), lwd = 2, col = j)
}
