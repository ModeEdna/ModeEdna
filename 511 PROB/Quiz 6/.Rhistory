df <- read.csv('Arianna_grande.csv')
head(df)
library(dplyr)
library(dplyr)
df <- read.csv('Arianna_grande.csv')
head(df)
# remove unwanted variables
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.mx')
df.clean <- df[vars]
df.clean <- df[vars,]
View(df.clean)
# remove unwanted variables
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.mx')
View(df)
df.clean <- df[vars,]
View(df.clean)
df.clean <- df[vars]
df.clean <- df %>% select(vars)
df.clean <- df %>% select('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.mx')
# remove unwanted variables
vars <- ('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.mx')
# remove unwanted variables
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.mx')
df[, vars]
df[, c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.mx')]
library(dplyr)
df <- read.csv('Arianna_grande.csv')
head(df)
df[, c('ag.danceability', 'ag.energy')]
df[, c('ag.danceability', 'ag.energy', 'ag.key')]
df[, c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness')]
df[, c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness')]
df[, c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness','ag.instrumentalness')]
df[, c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness','ag.instrumentalness', 'ag.liveness', 'ag.valence')]
# remove unwanted variables
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'af.durations.ms')
df[, vars]
# remove unwanted variables
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'ag.duration.ms')
df[, vars]
# remove unwanted variables
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.loudness', 'ag.speechiness', 'ag.acousticness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'ag.duration_ms')
df[, vars]
df.clean <- df[, vars]
set.seed(42)
sample <- sample(df.clean, length(df.clean$ag.danceability)*0.7, replace=FALSE)
length(df.clean$ag.danceability)*0.7
set.seed(42)
# going for a 70-30 split
sample <- sample(df.clean, 306)
sample <- sample(df.clean, 306)
sample(df.clean, 10)
sample(10, df.clean)
sample(df.clean, 10)
library(caTools)
set.seed(42)
sample <- sample.split(df.clean, SplitRatio=0.7)
sample(df.clean, 360)
length(df.clean$ag.danceability)*.7
sample_n(df.clean, 306)
library(dplyr)
set.seed(42)
train <- sample_n(df.clean, 306)
df.clean[!train]
View(train)
split1<- sample(c(rep(0, 0.7 * nrow(df.clean)), rep(1, 0.3 * nrow(df.clean))))
split1
set.seed(42)
split1<- sample(c(rep(0, 0.7 * nrow(df.clean)), rep(1, 0.3 * nrow(df.clean))))
split1
df.clean$sample <- split1
set.seed(42)
split1<- sample(c(rep(0, 306), rep(1, 131))
split1
split1<- sample(c(rep(0, 306), rep(1, 131))
set.seed(42)
set.seed(42)
split1<- sample(c(rep(0, 306), rep(1, 131))
df.clean$sample <- split1
set.seed(42)
smp_size <- floor(0.7 * nrow(df.clean))
train_ind <- sample(seq_len(nrow(df.clean)), size = smp_size)
train <- df.clean[train_ind, ]
test <- df.clean[-train_ind, ]
View(test)
View(train)
set.seed(42)
smp_size <- floor(0.7 * nrow(df.clean))
train_ind <- sample(seq_len(nrow(df.clean)), size = smp_size)
train <- df.clean[train_ind, ]
test <- df.clean[-train_ind, ]
fit <- lm(df.clean$ag.tempo ~ ., data = df.clean)
summary(fit)
fit <- lm(train$ag.tempo ~ ., data = train)
summary(fit)
cor(test)
cor(test, method='spearman')
install.packages("corrplot")
install.packages("corrplot")
library(corrplot)
cor(test, method='spearman')
corrplot(cor(test, method='spearman'))
heatmap(cor(test, method='spearman'))
corrplot(cor(test, method='spearman'), method='number)
M <- cor(test)
corrplot(cor(test, method='spearman'), method='number')
corrplot(M, method='number')
M <- cor(test)
corrplot(M, method='number')
corrplot(M, method='number', diag=FALSE)
corrplot(M, method='number', diag=TRUE)
corrplot(M, method='number', type='lower', diag=FALSE)
corrplot(M)
# removing the variables from the model
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.speechiness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'ag.duration_ms')
# put the clean data into a new df
df.clean <- df[, vars]
# put the clean data into a new df
df.clean2 <- df[, vars]
# removing the variables from the model
vars <- c('ag.danceability', 'ag.energy', 'ag.key', 'ag.speechiness', 'ag.instrumentalness', 'ag.liveness', 'ag.valence', 'ag.tempo', 'ag.duration_ms')
# put the clean data into a new df
df.clean2 <- df[, vars]
# train test split
set.seed(42)
smp_size <- floor(0.7 * nrow(df.clean2))
train_ind <- sample(seq_len(nrow(df.clean2)), size = smp_size)
train2 <- df.clean[train_ind, ]
test2 <- df.clean[-train_ind, ]
# fit the model
fit2 <- lm(train$ag.tempo ~ ., data = train2)
summary(fit2)
